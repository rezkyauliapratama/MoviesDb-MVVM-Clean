# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
executors:
  my-executor:
    docker:
    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4
    - image: circleci/android:api-28
jobs:
  build:
    working_directory: ~/code
    executor: my-executor
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - jars-
      - run:
          name: Download Dependencies
          command: |
            sudo chmod +x gradlew
            ./gradlew dependencies
      #- run:
      #    name: Setup emulator
      #    command: sdkmanager "system-images;android-21;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-21;default;armeabi-v7a"
      #- run:
      #    name: Launch emulator
      #    command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
      #    background: true
      #- run:
      #    name: Wait Emulator
      #    command: circle-android wait-for-boot
      - save_cache:
          paths:
          - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
  test:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Run Tests
          # change with the gradle test & coverage
          command: ./gradlew app:test  --stacktrace -PdisablePreDex --console=plain
          timeout: 120000
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

  deploy-internal:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Deploy into internal test
          command: |
            sudo chmod +x gradlew
            ./gradlew publishApkDevelopRelease -PdisablePreDex -Dtrack=internal

  deploy-alpha:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Deploy into alpha test
          command: |
            sudo chmod +x gradlew
            ./gradlew publishApkDevelopRelease -PdisablePreDex -Dtrack=alpha

  deploy-beta:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Deploy into beta test
          command: |
            sudo chmod +x gradlew
            ./gradlew publishApkBetaRelease -PdisablePreDex -Dtrack=beta

  deploy-production:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Deploy into production test
          command: |
            sudo chmod +x gradlew
            ./gradlew publishApkProductionRelease -PdisablePreDex -Dtrack=production

workflows:
  version: 2.1
  build-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              only:develop
      #- deploy-internal:
      #    requires:
      #      - test
      #    filters:
      #      branches:
      #        only: develop